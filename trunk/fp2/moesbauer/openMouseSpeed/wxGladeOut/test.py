#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Wed Mar 10 01:26:26 2010

import wx

# begin wxGlade: extracode
# end wxGlade



class myNotebook(wx.Notebook):
    def __init__(self, *args, **kwds):
        # begin wxGlade: myNotebook.__init__
        kwds["style"] = 0
        wx.Notebook.__init__(self, *args, **kwds)
        self.tabsMain_pane_3 = wx.Panel(self, -1)
        self.tabsMain_pane_2 = wx.Panel(self, -1)
        self.notebook_2_pane_1 = wx.Panel(self, -1)
        self.label_2 = wx.StaticText(self.notebook_2_pane_1, -1, "Logging")
        self.label_3 = wx.StaticText(self.notebook_2_pane_1, -1, "Data Folder")
        self.txtDataFolder = wx.TextCtrl(self.notebook_2_pane_1, -1, "")
        self.chkBoxLogData = wx.CheckBox(self.notebook_2_pane_1, -1, "enabled")
        self.label_3_copy = wx.StaticText(self.notebook_2_pane_1, -1, "Data File")
        self.txtDataFile = wx.TextCtrl(self.notebook_2_pane_1, -1, "")
        self.btnStart = wx.Button(self.notebook_2_pane_1, -1, "Start")
        self.btnStop = wx.Button(self.notebook_2_pane_1, -1, "Stop")
        self.static_line_1 = wx.StaticLine(self.notebook_2_pane_1, -1)
        self.txtData = wx.TextCtrl(self.notebook_2_pane_1, -1, "", style=wx.TE_MULTILINE)
        self.static_line_3 = wx.StaticLine(self.notebook_2_pane_1, -1)
        self.label_2_copy_copy_1 = wx.StaticText(self.tabsMain_pane_2, -1, "Histogramm")
        self.label_3_copy_1_copy_copy = wx.StaticText(self.tabsMain_pane_2, -1, "Number of Bins")
        self.txtHistoBins = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.button_1_copy_copy_1 = wx.Button(self.tabsMain_pane_2, -1, "Fit")
        self.label_3_copy_1_copy_2 = wx.StaticText(self.tabsMain_pane_2, -1, "x Minimum")
        self.txtHistoMin = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.btnDrawHisto = wx.Button(self.tabsMain_pane_2, -1, "Draw")
        self.label_3_copy_copy_copy_1 = wx.StaticText(self.tabsMain_pane_2, -1, "x Maximum")
        self.txtHistoMax = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.static_line_7 = wx.StaticLine(self.tabsMain_pane_2, -1)
        self.label_2_copy_copy_copy = wx.StaticText(self.tabsMain_pane_2, -1, "Velocity")
        self.panel_1_copy = wx.Panel(self.tabsMain_pane_2, -1)
        self.panel_2_copy = wx.Panel(self.tabsMain_pane_2, -1)
        self.button_1_copy_copy_copy = wx.Button(self.tabsMain_pane_2, -1, "Fit")
        self.label_3_copy_1_copy_1_copy = wx.StaticText(self.tabsMain_pane_2, -1, "x Minimum")
        self.txtVelMin = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.btnDrawVel = wx.Button(self.tabsMain_pane_2, -1, "Draw")
        self.label_3_copy_copy_copy_copy = wx.StaticText(self.tabsMain_pane_2, -1, "x Maximum")
        self.txtVelMax = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.static_line_8 = wx.StaticLine(self.tabsMain_pane_2, -1)
        self.label_2_copy_copy_1_copy = wx.StaticText(self.tabsMain_pane_2, -1, "Calibration")
        self.label_3_copy_1_copy_copy_copy = wx.StaticText(self.tabsMain_pane_2, -1, "Number of Bins")
        self.txtCalibrationBins = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.button_1_copy_copy_1_copy = wx.Button(self.tabsMain_pane_2, -1, "Fit")
        self.label_3_copy_1_copy_2_copy = wx.StaticText(self.tabsMain_pane_2, -1, "x Minimum")
        self.txtCalibrationMin = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.btnDrawCalibration = wx.Button(self.tabsMain_pane_2, -1, "Draw")
        self.label_3_copy_copy_copy_1_copy = wx.StaticText(self.tabsMain_pane_2, -1, "x Maximum")
        self.txtCalibrationMax = wx.TextCtrl(self.tabsMain_pane_2, -1, "")
        self.label_5 = wx.StaticText(self.tabsMain_pane_3, -1, "This is an attempt to Calibrate the Sensor.\nTo do so you must Press Start, move the Sensor \nthe give Distance and Press stop again.\nThe more often you do the better the \nError can be calculated", style=wx.ALIGN_CENTRE)
        self.label_4 = wx.StaticText(self.tabsMain_pane_3, -1, "Distance [mm]")
        self.txtCalDistance = wx.TextCtrl(self.tabsMain_pane_3, -1, "")
        self.static_line_10 = wx.StaticLine(self.tabsMain_pane_3, -1)
        self.btnStartCal = wx.Button(self.tabsMain_pane_3, -1, "Start")
        self.btnTestCal = wx.Button(self.tabsMain_pane_3, -1, "Test")
        self.btnStopCal = wx.Button(self.tabsMain_pane_3, -1, "Stop")
        self.btnSaveCal = wx.Button(self.tabsMain_pane_3, -1, "Save")
        self.btnCalculate = wx.Button(self.tabsMain_pane_3, -1, "Calculate")
        self.btnHelp = wx.Button(self.tabsMain_pane_3, -1, "Help")
        self.static_line_11 = wx.StaticLine(self.tabsMain_pane_3, -1)
        self.txtCalData = wx.TextCtrl(self.tabsMain_pane_3, -1, "", style=wx.TE_MULTILINE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnStartData, self.btnStart)
        self.Bind(wx.EVT_BUTTON, self.OnStopData, self.btnStop)
        self.Bind(wx.EVT_BUTTON, self.OnFitHisto, self.button_1_copy_copy_1)
        self.Bind(wx.EVT_BUTTON, self.OnDrawHisto, self.btnDrawHisto)
        self.Bind(wx.EVT_BUTTON, self.OnFitVel, self.button_1_copy_copy_copy)
        self.Bind(wx.EVT_BUTTON, self.OnDrawVel, self.btnDrawVel)
        self.Bind(wx.EVT_BUTTON, self.OnFitHisto, self.button_1_copy_copy_1_copy)
        self.Bind(wx.EVT_BUTTON, self.OnDrawCalibration, self.btnDrawCalibration)
        self.Bind(wx.EVT_BUTTON, self.OnStartCal, self.btnStartCal)
        self.Bind(wx.EVT_BUTTON, self.OnTestCal, self.btnTestCal)
        self.Bind(wx.EVT_BUTTON, self.OnStopCal, self.btnStopCal)
        self.Bind(wx.EVT_BUTTON, self.OnSaveCal, self.btnSaveCal)
        self.Bind(wx.EVT_BUTTON, self.OnCalculateCal, self.btnCalculate)
        self.Bind(wx.EVT_BUTTON, self.OnHelpCal, self.btnHelp)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: myNotebook.__set_properties
        self.AddPage(self.notebook_2_pane_1, "Meassurement")
        self.AddPage(self.tabsMain_pane_2, "Analyze")
        self.AddPage(self.tabsMain_pane_3, "Calibrate")
        self.label_2.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.chkBoxLogData.SetValue(1)
        self.txtData.SetMinSize((384, 100))
        self.label_2_copy_copy_1.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.button_1_copy_copy_1.Hide()
        self.label_2_copy_copy_copy.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.button_1_copy_copy_copy.Hide()
        self.label_2_copy_copy_1_copy.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.button_1_copy_copy_1_copy.Hide()
        self.label_4.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.txtCalData.SetMinSize((384, 100))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: myNotebook.__do_layout
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14_copy_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_14_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1_copy_copy_1_copy = wx.GridSizer(3, 3, 0, 0)
        grid_sizer_1_copy_copy_copy = wx.GridSizer(3, 3, 0, 0)
        grid_sizer_1_copy_copy_1 = wx.GridSizer(3, 3, 0, 0)
        sizerOne = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_17 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(3, 3, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.txtDataFolder, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.chkBoxLogData, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.txtDataFile, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_16.Add(self.btnStart, 0, wx.ADJUST_MINSIZE, 0)
        sizer_15.Add(sizer_16, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_15.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_17.Add(self.btnStop, 0, wx.ADJUST_MINSIZE, 0)
        sizer_15.Add(sizer_17, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_15, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_1.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_1.Add(self.txtData, 0, wx.EXPAND, 0)
        sizer_1.Add(self.static_line_3, 0, wx.EXPAND, 0)
        sizerOne.Add(sizer_1, 1, wx.EXPAND, 0)
        self.notebook_2_pane_1.SetSizer(sizerOne)
        grid_sizer_1_copy_copy_1.Add(self.label_2_copy_copy_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1_copy_copy_1.Add(self.label_3_copy_1_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.txtHistoBins, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.button_1_copy_copy_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.label_3_copy_1_copy_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.txtHistoMin, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.btnDrawHisto, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.label_3_copy_copy_copy_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1.Add(self.txtHistoMax, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_9.Add(grid_sizer_1_copy_copy_1, 1, wx.EXPAND, 0)
        sizer_9.Add(self.static_line_7, 0, wx.EXPAND, 0)
        grid_sizer_1_copy_copy_copy.Add(self.label_2_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_copy.Add(self.panel_1_copy, 1, wx.EXPAND, 0)
        grid_sizer_1_copy_copy_copy.Add(self.panel_2_copy, 1, wx.EXPAND, 0)
        grid_sizer_1_copy_copy_copy.Add(self.button_1_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_copy.Add(self.label_3_copy_1_copy_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_copy.Add(self.txtVelMin, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_copy.Add(self.btnDrawVel, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_copy.Add(self.label_3_copy_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_copy.Add(self.txtVelMax, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_9.Add(grid_sizer_1_copy_copy_copy, 1, wx.EXPAND, 0)
        sizer_9.Add(self.static_line_8, 0, wx.EXPAND, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.label_2_copy_copy_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.label_3_copy_1_copy_copy_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.txtCalibrationBins, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.button_1_copy_copy_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.label_3_copy_1_copy_2_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.txtCalibrationMin, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.btnDrawCalibration, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.label_3_copy_copy_copy_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1_copy_copy_1_copy.Add(self.txtCalibrationMax, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_9.Add(grid_sizer_1_copy_copy_1_copy, 1, wx.EXPAND, 0)
        self.tabsMain_pane_2.SetSizer(sizer_9)
        sizer_11.Add(self.label_5, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ADJUST_MINSIZE, 0)
        sizer_12.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        sizer_12.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_12.Add(self.txtCalDistance, 0, wx.ADJUST_MINSIZE, 0)
        sizer_11.Add(sizer_12, 1, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 20)
        sizer_10.Add(sizer_11, 1, wx.EXPAND, 0)
        sizer_10.Add(self.static_line_10, 0, wx.EXPAND, 0)
        sizer_14.Add(self.btnStartCal, 0, wx.ADJUST_MINSIZE, 0)
        sizer_14.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_14.Add(self.btnTestCal, 0, wx.ADJUST_MINSIZE, 0)
        sizer_13.Add(sizer_14, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_13.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_14_copy.Add(self.btnStopCal, 0, wx.ADJUST_MINSIZE, 0)
        sizer_14_copy.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_14_copy.Add(self.btnSaveCal, 0, wx.ADJUST_MINSIZE, 0)
        sizer_13.Add(sizer_14_copy, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_13.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_14_copy_1.Add(self.btnCalculate, 0, wx.ADJUST_MINSIZE, 0)
        sizer_14_copy_1.Add((20, 20), 0, wx.ADJUST_MINSIZE, 0)
        sizer_14_copy_1.Add(self.btnHelp, 0, wx.ADJUST_MINSIZE, 0)
        sizer_13.Add(sizer_14_copy_1, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_10.Add(sizer_13, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_10.Add(self.static_line_11, 0, wx.EXPAND, 0)
        sizer_10.Add(self.txtCalData, 0, wx.EXPAND, 0)
        self.tabsMain_pane_3.SetSizer(sizer_10)
        # end wxGlade

    def OnStartData(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnStartData' not implemented!"
        event.Skip()

    def OnStopData(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnStopData' not implemented!"
        event.Skip()

    def OnFitHisto(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnFitHisto' not implemented!"
        event.Skip()

    def OnDrawHisto(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnDrawHisto' not implemented!"
        event.Skip()

    def OnFitVel(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnFitVel' not implemented!"
        event.Skip()

    def OnDrawVel(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnDrawVel' not implemented!"
        event.Skip()

    def OnDrawCalibration(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnDrawCalibration' not implemented!"
        event.Skip()

    def OnStartCal(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnStartCal' not implemented!"
        event.Skip()

    def OnTestCal(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnTestCal' not implemented!"
        event.Skip()

    def OnStopCal(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnStopCal' not implemented!"
        event.Skip()

    def OnSaveCal(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnSaveCal' not implemented!"
        event.Skip()

    def OnCalculateCal(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnCalculateCal' not implemented!"
        event.Skip()

    def OnHelpCal(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `OnHelpCal' not implemented!"
        event.Skip()

# end of class myNotebook


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(1, "Open", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(2, "Connect", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(3, "QuickConnect", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(4, "Quit", "", wx.ITEM_NORMAL)
        self.menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(5, "About", "", wx.ITEM_NORMAL)
        self.menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.menubar)
        # Menu Bar end
        self.statusbar = self.CreateStatusBar(1, 0)
        self.tabsMain = myNotebook(self, -1)
        self.static_line_9 = wx.StaticLine(self, -1)
        self.txtDebug = wx.TextCtrl(self, -1, "Open Mouse Speed - Use a Mouse Sensor to meassure low Speeds", style=wx.TE_MULTILINE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnMenuOpen, id=1)
        self.Bind(wx.EVT_MENU, self.OnMenuConnect, id=2)
        self.Bind(wx.EVT_MENU, self.OnMenuQuickConnect, id=3)
        self.Bind(wx.EVT_MENU, self.OnMenuQuit, id=4)
        self.Bind(wx.EVT_MENU, self.OnMenuAbout, id=5)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle("openMouseSpeed")
        self.SetSize((386, 968))
        self.statusbar.SetStatusWidths([-1])
        # statusbar fields
        statusbar_fields = ["Welcome to openMouseSpeed 0.1a"]
        for i in range(len(statusbar_fields)):
            self.statusbar.SetStatusText(statusbar_fields[i], i)
        self.txtDebug.SetMinSize((386, 80))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizerMain = wx.BoxSizer(wx.VERTICAL)
        sizerMain.Add(self.tabsMain, 1, wx.EXPAND, 0)
        sizerMain.Add(self.static_line_9, 0, wx.EXPAND, 0)
        sizerMain.Add(self.txtDebug, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        self.SetSizer(sizerMain)
        self.Layout()
        self.SetSize((386, 968))
        # end wxGlade

    def OnMenuOpen(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `OnMenuOpen' not implemented!"
        event.Skip()

    def OnMenuConnect(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `OnMenuConnect' not implemented!"
        event.Skip()

    def OnMenuQuickConnect(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `OnMenuQuickConnect' not implemented!"
        event.Skip()

    def OnMenuQuit(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `OnMenuQuit' not implemented!"
        event.Skip()

    def OnMenuAbout(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `OnMenuAbout' not implemented!"
        event.Skip()

# end of class MainFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    mainFrame = MainFrame(None, -1, "")
    app.SetTopWindow(mainFrame)
    mainFrame.Show()
    app.MainLoop()
