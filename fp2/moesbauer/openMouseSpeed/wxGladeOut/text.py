#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Tue Mar  9 01:50:05 2010

import wx

# begin wxGlade: extracode
# end wxGlade



class myNotebook(wx.Notebook):
    def __init__(self, *args, **kwds):
        # begin wxGlade: myNotebook.__init__
        kwds["style"] = 0
        wx.Notebook.__init__(self, *args, **kwds)
        self.notebook_2_pane_1 = wx.Panel(self, -1)
        self.label_1 = wx.StaticText(self.notebook_2_pane_1, -1, "Histogramm X Minimum")
        self.text_ctrl_1 = wx.TextCtrl(self.notebook_2_pane_1, -1, "-4e3")
        self.panel_1 = wx.Panel(self.notebook_2_pane_1, -1)
        self.label_2 = wx.StaticText(self.notebook_2_pane_1, -1, "Histogramm X Maximum")
        self.text_ctrl_2 = wx.TextCtrl(self.notebook_2_pane_1, -1, "")
        self.button_1 = wx.Button(self.notebook_2_pane_1, -1, "Draw Histo")
        self.label_3 = wx.StaticText(self.notebook_2_pane_1, -1, "Velocity Samples")
        self.text_ctrl_3 = wx.TextCtrl(self.notebook_2_pane_1, -1, "")
        self.button_2 = wx.Button(self.notebook_2_pane_1, -1, "Draw Velocity")
        self.txtArea = wx.TextCtrl(self.notebook_2_pane_1, -1, "Open Mouse Speed - Use a Mouse Sensor to meassure low Speeds", style=wx.TE_MULTILINE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onDrawHisto, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.onDrawVel, self.button_2)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: myNotebook.__set_properties
        self.AddPage(self.notebook_2_pane_1, "Meassurement")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: myNotebook.__do_layout
        sizerOne = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(3, 3, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.text_ctrl_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.text_ctrl_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.button_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.text_ctrl_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.button_2, 0, wx.ADJUST_MINSIZE, 0)
        sizerOne.Add(grid_sizer_1, 1, wx.ALL|wx.ADJUST_MINSIZE, 3)
        sizerOne.Add(self.txtArea, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        self.notebook_2_pane_1.SetSizer(sizerOne)
        # end wxGlade

    def onDrawHisto(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `onDrawHisto' not implemented!"
        event.Skip()

    def onDrawVel(self, event): # wxGlade: myNotebook.<event_handler>
        print "Event handler `onDrawVel' not implemented!"
        event.Skip()

# end of class myNotebook


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "Settings", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Connect", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(wx.NewId(), "Quit", "", wx.ITEM_NORMAL)
        self.menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "About", "", wx.ITEM_NORMAL)
        self.menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.menubar)
        # Menu Bar end
        self.statusbar = self.CreateStatusBar(2, 0)
        self.tabsMain = myNotebook(self, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.menuSetiingsHandler, id=-1)
        self.Bind(wx.EVT_MENU, self.menuConnectHandler, id=-1)
        self.Bind(wx.EVT_MENU, self.menuQuitHandler, id=-1)
        self.Bind(wx.EVT_MENU, self.menuAboutHandler, id=-1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle("openMouseSpeed")
        self.SetSize((955, 742))
        self.statusbar.SetStatusWidths([-1, 100])
        # statusbar fields
        statusbar_fields = ["Welcome to openMouseSpeed 0.1a", "not connected"]
        for i in range(len(statusbar_fields)):
            self.statusbar.SetStatusText(statusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizerMain = wx.BoxSizer(wx.VERTICAL)
        sizerMain.Add(self.tabsMain, 1, wx.EXPAND, 0)
        self.SetSizer(sizerMain)
        self.Layout()
        self.SetSize((955, 742))
        # end wxGlade

    def menuSetiingsHandler(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `menuSetiingsHandler' not implemented!"
        event.Skip()

    def menuConnectHandler(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `menuConnectHandler' not implemented!"
        event.Skip()

    def menuQuitHandler(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `menuQuitHandler' not implemented!"
        event.Skip()

    def menuAboutHandler(self, event): # wxGlade: MainFrame.<event_handler>
        print "Event handler `menuAboutHandler' not implemented!"
        event.Skip()

# end of class MainFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    mainFrame = MainFrame(None, -1, "")
    app.SetTopWindow(mainFrame)
    mainFrame.Show()
    app.MainLoop()
